{"ast":null,"code":"var _jsxFileName = \"/home/carlos/portafolio6_0/portafolio/src/hooks/useProjects/useProjects.js\";\nimport React from \"react\";\nimport { useState, useEffect, createContext, useContext } from \"react\";\nimport { getJWT, localSDB, setJWT, routerMain, capitalLetters } from \"utils\";\nimport axios from \"axios\";\nimport { UserContext } from \"hooks\";\nexport const ProjectContext = createContext([]);\nexport const ProjectContextProvider = props => {\n  const [projects, setProjects] = useState([]);\n  const [singleProject, setSingleProject] = useState({});\n  const {\n    user\n  } = useContext(UserContext);\n  const {\n    WordComb\n  } = capitalLetters();\n  const [toAdd, setToAdd] = useState({\n    userId: \"\",\n    title: \"\",\n    description: \"\",\n    urlimage: \"\",\n    projecturl: \"\",\n    tags: [],\n    colaborators: []\n  });\n  useEffect(() => {\n    if (getJWT(localSDB.user) === null) {\n      console.log(\"no user\");\n    } else {\n      if (!getJWT(localSDB.projects)) {\n        getUserProjects();\n      } else {\n        setProjects(getJWT(localSDB.projects));\n      }\n    }\n  }, []);\n\n  const getTags = () => {\n    const tagArray = [].concat.apply([], projects.map(project => project.tags)).filter((val, id, array) => array.indexOf(val) === id);\n    return tagArray;\n  };\n\n  const getUserProjects = () => {\n    const user = getJWT(localSDB.user);\n    console.log(\"hola:\" + user);\n\n    if (user != null) {\n      axios.get(routerMain.projectRouter.findProjectByUserId + user._id).then(res => {\n        setProjects(res.data);\n        setJWT(localSDB.projects, res.data);\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }; //User Only for the Live version so the client doesn't use their localStorage\n\n\n  const fethProjectsData = id => {\n    axios.get(routerMain.projectRouter.findProjectByUserId + id).then(res => {\n      setProjects(res.data); //setJWT(localStorageDB.projects, res.data);\n    }).catch(err => console.log(err));\n  };\n\n  const getProjectByUserId = () => {\n    axios.get(routerMain.projectRouter.findProject + projects._id).then(res => {\n      setSingleProject(res.data);\n      console.log(\"Project found:\" + res.data);\n    });\n  };\n\n  const addProject = () => {\n    const objt = toAdd;\n    objt.userId = user._id;\n    axios.post(routerMain.projectRouter.addProject, objt).then(res => {\n      setJWT(localSDB.projects, [...projects, res.data]);\n      setProjects([...projects, res.data]);\n    }).catch(err => console.log(err));\n  };\n\n  const handleChange = prop => event => {\n    setToAdd({ ...toAdd,\n      [prop]: event.target.value\n    });\n    console.log(toAdd);\n  };\n\n  const updateFoundProject = (card, index) => {\n    console.log(card);\n\n    if (toAdd.title !== \"\") {\n      card.title = toAdd.title;\n    }\n\n    if (toAdd.colaborators !== \"\") {\n      card.colaborators = toAdd.colaborators;\n    }\n\n    if (toAdd.description !== \"\") {\n      card.description = toAdd.description;\n    }\n\n    if (toAdd.urlimage !== \"\") {\n      card.urlimage = toAdd.urlimage;\n    }\n\n    if (toAdd.projecturl !== \"\") {\n      card.projecturl = toAdd.projecturl;\n    }\n\n    if (toAdd !== []) {\n      card.tags = toAdd.tags;\n    }\n\n    let newArr = [...projects];\n    newArr[index] = card;\n    newArr.userId = user._id;\n    setProjects(newArr);\n    setJWT(localSDB.projects, newArr);\n    const updateURL = routerMain.projectRouter.uptadeProject + card._id;\n    axios.post(updateURL, card).then(res => console.log(\"Updated Successfully\")).catch(err => console.log(err));\n    setToAdd({\n      userId: \"\",\n      title: \"\",\n      description: \"\",\n      urlimage: \"\",\n      projecturl: \"\",\n      tags: [],\n      colaborators: []\n    });\n  };\n\n  const saveProject = () => {\n    setProjects([...projects, toAdd]);\n    setJWT(localSDB.projects, [...projects, toAdd]);\n  };\n\n  const deleteProjectById = id => {\n    console.log(id);\n    let newArray = projects.filter(e => e._id !== id);\n    setJWT(localSDB.projects, newArray);\n    setProjects(newArray);\n    axios.delete(routerMain.projectRouter.deleteProject + id).then(resp => resp.json()).then(res => {\n      console.log(\"Project successfully deleted\");\n      console.log(res);\n    }).catch(err => console.log(err));\n  };\n\n  const getProjectByTag = async tag => {\n    const tags = WordComb(tag);\n    await axios.post(routerMain.projectRouter.getProjectsByTag, {\n      tags\n    }).then(projectsByTag => {\n      setJWT(localSDB.pTags, projectsByTag.data);\n      window.location = \"/index/tags\";\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ProjectContext.Provider, {\n    value: {\n      getTags,\n      projects,\n      setProjects,\n      saveProject,\n      handleChange,\n      updateFoundProject,\n      addProject,\n      getUserProjects,\n      getProjectByUserId,\n      fethProjectsData,\n      deleteProjectById,\n      setToAdd,\n      toAdd,\n      getProjectByTag\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 5\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/hooks/useProjects/useProjects.js"],"names":["React","useState","useEffect","createContext","useContext","getJWT","localSDB","setJWT","routerMain","capitalLetters","axios","UserContext","ProjectContext","ProjectContextProvider","props","projects","setProjects","singleProject","setSingleProject","user","WordComb","toAdd","setToAdd","userId","title","description","urlimage","projecturl","tags","colaborators","console","log","getUserProjects","getTags","tagArray","concat","apply","map","project","filter","val","id","array","indexOf","get","projectRouter","findProjectByUserId","_id","then","res","data","catch","err","fethProjectsData","getProjectByUserId","findProject","addProject","objt","post","handleChange","prop","event","target","value","updateFoundProject","card","index","newArr","updateURL","uptadeProject","saveProject","deleteProjectById","newArray","e","delete","deleteProject","resp","json","getProjectByTag","tag","getProjectsByTag","projectsByTag","pTags","window","location","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,EAA6CC,UAA7C,QAA+D,OAA/D;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,MAA3B,EAAmCC,UAAnC,EAA+CC,cAA/C,QAAqE,OAArE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,OAAO,MAAMC,cAAc,GAAGT,aAAa,CAAC,EAAD,CAApC;AAEP,OAAO,MAAMU,sBAAsB,GAAIC,KAAD,IAAW;AAC/C,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,aAAD,EAAgBC,gBAAhB,IAAoCjB,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM;AAAEkB,IAAAA;AAAF,MAAWf,UAAU,CAACO,WAAD,CAA3B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAeX,cAAc,EAAnC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC;AACjCsB,IAAAA,MAAM,EAAE,EADyB;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,WAAW,EAAE,EAHoB;AAIjCC,IAAAA,QAAQ,EAAE,EAJuB;AAKjCC,IAAAA,UAAU,EAAE,EALqB;AAMjCC,IAAAA,IAAI,EAAE,EAN2B;AAOjCC,IAAAA,YAAY,EAAC;AAPoB,GAAD,CAAlC;AAUA3B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,MAAM,CAACC,QAAQ,CAACa,IAAV,CAAN,KAA0B,IAA9B,EAAoC;AAClCW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAFD,MAEO;AACL,UAAI,CAAC1B,MAAM,CAACC,QAAQ,CAACS,QAAV,CAAX,EAAgC;AAC9BiB,QAAAA,eAAe;AAChB,OAFD,MAEO;AACLhB,QAAAA,WAAW,CAACX,MAAM,CAACC,QAAQ,CAACS,QAAV,CAAP,CAAX;AACD;AACF;AACF,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMkB,OAAO,GAAG,MAAM;AACpB,UAAMC,QAAQ,GAAG,GAAGC,MAAH,CACdC,KADc,CAEb,EAFa,EAGbrB,QAAQ,CAACsB,GAAT,CAAcC,OAAD,IAAaA,OAAO,CAACV,IAAlC,CAHa,EAKdW,MALc,CAKP,CAACC,GAAD,EAAMC,EAAN,EAAUC,KAAV,KAAoBA,KAAK,CAACC,OAAN,CAAcH,GAAd,MAAuBC,EALpC,CAAjB;AAMA,WAAOP,QAAP;AACD,GARD;;AAUA,QAAMF,eAAe,GAAG,MAAM;AAC5B,UAAMb,IAAI,GAAGd,MAAM,CAACC,QAAQ,CAACa,IAAV,CAAnB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUZ,IAAtB;;AACA,QAAIA,IAAI,IAAI,IAAZ,EAAkB;AAChBT,MAAAA,KAAK,CACFkC,GADH,CACOpC,UAAU,CAACqC,aAAX,CAAyBC,mBAAzB,GAA+C3B,IAAI,CAAC4B,GAD3D,EAEGC,IAFH,CAESC,GAAD,IAAS;AACbjC,QAAAA,WAAW,CAACiC,GAAG,CAACC,IAAL,CAAX;AACA3C,QAAAA,MAAM,CAACD,QAAQ,CAACS,QAAV,EAAoBkC,GAAG,CAACC,IAAxB,CAAN;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,OANH,EAOGE,KAPH,CAOUC,GAAD,IAAS;AACdtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ;AACD,OATH;AAUD;AACF,GAfD,CArC+C,CAsD/C;;;AACA,QAAMC,gBAAgB,GAAIZ,EAAD,IAAQ;AAC/B/B,IAAAA,KAAK,CACFkC,GADH,CACOpC,UAAU,CAACqC,aAAX,CAAyBC,mBAAzB,GAA+CL,EADtD,EAEGO,IAFH,CAESC,GAAD,IAAS;AACbjC,MAAAA,WAAW,CAACiC,GAAG,CAACC,IAAL,CAAX,CADa,CAEb;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CANlB;AAOD,GARD;;AAUA,QAAME,kBAAkB,GAAG,MAAM;AAC/B5C,IAAAA,KAAK,CACFkC,GADH,CACOpC,UAAU,CAACqC,aAAX,CAAyBU,WAAzB,GAAuCxC,QAAQ,CAACgC,GADvD,EAEGC,IAFH,CAESC,GAAD,IAAS;AACb/B,MAAAA,gBAAgB,CAAC+B,GAAG,CAACC,IAAL,CAAhB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBkB,GAAG,CAACC,IAAnC;AACD,KALH;AAMD,GAPD;;AASA,QAAMM,UAAU,GAAG,MAAM;AACvB,UAAMC,IAAI,GAAGpC,KAAb;AACAoC,IAAAA,IAAI,CAAClC,MAAL,GAAcJ,IAAI,CAAC4B,GAAnB;AAEArC,IAAAA,KAAK,CACFgD,IADH,CACQlD,UAAU,CAACqC,aAAX,CAAyBW,UADjC,EAC6CC,IAD7C,EAEGT,IAFH,CAESC,GAAD,IAAS;AACb1C,MAAAA,MAAM,CAACD,QAAQ,CAACS,QAAV,EAAoB,CAAC,GAAGA,QAAJ,EAAckC,GAAG,CAACC,IAAlB,CAApB,CAAN;AACAlC,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAckC,GAAG,CAACC,IAAlB,CAAD,CAAX;AACD,KALH,EAMGC,KANH,CAMUC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CANlB;AAOD,GAXD;;AAaA,QAAMO,YAAY,GAAIC,IAAD,IAAWC,KAAD,IAAW;AACxCvC,IAAAA,QAAQ,CAAC,EACP,GAAGD,KADI;AAEP,OAACuC,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAFd,KAAD,CAAR;AAIAjC,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACD,GAND;;AAQA,QAAM2C,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1CpC,IAAAA,OAAO,CAACC,GAAR,CAAYkC,IAAZ;;AACA,QAAI5C,KAAK,CAACG,KAAN,KAAgB,EAApB,EAAwB;AACtByC,MAAAA,IAAI,CAACzC,KAAL,GAAaH,KAAK,CAACG,KAAnB;AACD;;AACD,QAAIH,KAAK,CAACQ,YAAN,KAAuB,EAA3B,EAA+B;AAC7BoC,MAAAA,IAAI,CAACpC,YAAL,GAAoBR,KAAK,CAACQ,YAA1B;AACD;;AACD,QAAIR,KAAK,CAACI,WAAN,KAAsB,EAA1B,EAA8B;AAC5BwC,MAAAA,IAAI,CAACxC,WAAL,GAAmBJ,KAAK,CAACI,WAAzB;AACD;;AACD,QAAIJ,KAAK,CAACK,QAAN,KAAmB,EAAvB,EAA2B;AACzBuC,MAAAA,IAAI,CAACvC,QAAL,GAAgBL,KAAK,CAACK,QAAtB;AACD;;AACD,QAAIL,KAAK,CAACM,UAAN,KAAqB,EAAzB,EAA6B;AAC3BsC,MAAAA,IAAI,CAACtC,UAAL,GAAkBN,KAAK,CAACM,UAAxB;AACD;;AACD,QAAIN,KAAK,KAAK,EAAd,EAAkB;AAChB4C,MAAAA,IAAI,CAACrC,IAAL,GAAYP,KAAK,CAACO,IAAlB;AACD;;AAED,QAAIuC,MAAM,GAAG,CAAC,GAAGpD,QAAJ,CAAb;AACAoD,IAAAA,MAAM,CAACD,KAAD,CAAN,GAAgBD,IAAhB;AACAE,IAAAA,MAAM,CAAC5C,MAAP,GAAgBJ,IAAI,CAAC4B,GAArB;AAEA/B,IAAAA,WAAW,CAACmD,MAAD,CAAX;AACA5D,IAAAA,MAAM,CAACD,QAAQ,CAACS,QAAV,EAAoBoD,MAApB,CAAN;AACA,UAAMC,SAAS,GAAG5D,UAAU,CAACqC,aAAX,CAAyBwB,aAAzB,GAAyCJ,IAAI,CAAClB,GAAhE;AAEArC,IAAAA,KAAK,CACFgD,IADH,CACQU,SADR,EACmBH,IADnB,EAEGjB,IAFH,CAESC,GAAD,IAASnB,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAFjB,EAGGoB,KAHH,CAGUC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CAHlB;AAKA9B,IAAAA,QAAQ,CAAC;AACPC,MAAAA,MAAM,EAAE,EADD;AAEPC,MAAAA,KAAK,EAAE,EAFA;AAGPC,MAAAA,WAAW,EAAE,EAHN;AAIPC,MAAAA,QAAQ,EAAE,EAJH;AAKPC,MAAAA,UAAU,EAAE,EALL;AAMPC,MAAAA,IAAI,EAAE,EANC;AAOPC,MAAAA,YAAY,EAAC;AAPN,KAAD,CAAR;AASD,GA3CD;;AA6CA,QAAMyC,WAAW,GAAG,MAAM;AACxBtD,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcM,KAAd,CAAD,CAAX;AACAd,IAAAA,MAAM,CAACD,QAAQ,CAACS,QAAV,EAAoB,CAAC,GAAGA,QAAJ,EAAcM,KAAd,CAApB,CAAN;AACD,GAHD;;AAKA,QAAMkD,iBAAiB,GAAI9B,EAAD,IAAQ;AAChCX,IAAAA,OAAO,CAACC,GAAR,CAAYU,EAAZ;AACA,QAAI+B,QAAQ,GAAGzD,QAAQ,CAACwB,MAAT,CAAiBkC,CAAD,IAAOA,CAAC,CAAC1B,GAAF,KAAUN,EAAjC,CAAf;AAEAlC,IAAAA,MAAM,CAACD,QAAQ,CAACS,QAAV,EAAoByD,QAApB,CAAN;AACAxD,IAAAA,WAAW,CAACwD,QAAD,CAAX;AACA9D,IAAAA,KAAK,CACFgE,MADH,CACUlE,UAAU,CAACqC,aAAX,CAAyB8B,aAAzB,GAAyClC,EADnD,EAEGO,IAFH,CAES4B,IAAD,IAAUA,IAAI,CAACC,IAAL,EAFlB,EAGG7B,IAHH,CAGSC,GAAD,IAAS;AACbnB,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAZ;AACD,KANH,EAOGE,KAPH,CAOUC,GAAD,IAAStB,OAAO,CAACC,GAAR,CAAYqB,GAAZ,CAPlB;AAQD,GAdD;;AAgBA,QAAM0B,eAAe,GAAG,MAAOC,GAAP,IAAe;AACrC,UAAMnD,IAAI,GAAGR,QAAQ,CAAC2D,GAAD,CAArB;AAEA,UAAMrE,KAAK,CACRgD,IADG,CACElD,UAAU,CAACqC,aAAX,CAAyBmC,gBAD3B,EAC6C;AAAEpD,MAAAA;AAAF,KAD7C,EAEHoB,IAFG,CAEGiC,aAAD,IAAmB;AACvB1E,MAAAA,MAAM,CAACD,QAAQ,CAAC4E,KAAV,EAAiBD,aAAa,CAAC/B,IAA/B,CAAN;AACAiC,MAAAA,MAAM,CAACC,QAAP,GAAkB,aAAlB;AACD,KALG,CAAN;AAMD,GATD;;AAWA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLnD,MAAAA,OADK;AAELlB,MAAAA,QAFK;AAGLC,MAAAA,WAHK;AAILsD,MAAAA,WAJK;AAKLX,MAAAA,YALK;AAMLK,MAAAA,kBANK;AAOLR,MAAAA,UAPK;AAQLxB,MAAAA,eARK;AASLsB,MAAAA,kBATK;AAULD,MAAAA,gBAVK;AAWLkB,MAAAA,iBAXK;AAYLjD,MAAAA,QAZK;AAaLD,MAAAA,KAbK;AAcLyD,MAAAA;AAdK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAkBGhE,KAAK,CAACuE,QAlBT,CADF;AAsBD,CAlMM","sourcesContent":["import React from \"react\";\nimport { useState, useEffect, createContext, useContext } from \"react\";\nimport { getJWT, localSDB, setJWT, routerMain, capitalLetters } from \"utils\";\nimport axios from \"axios\";\nimport { UserContext } from \"hooks\";\n\nexport const ProjectContext = createContext([]);\n\nexport const ProjectContextProvider = (props) => {\n  const [projects, setProjects] = useState([]);\n  const [singleProject, setSingleProject] = useState({});\n  const { user } = useContext(UserContext);\n  const { WordComb } = capitalLetters();\n  const [toAdd, setToAdd] = useState({\n    userId: \"\",\n    title: \"\",\n    description: \"\",\n    urlimage: \"\",\n    projecturl: \"\",\n    tags: [],\n    colaborators:[],\n  });\n\n  useEffect(() => {\n    if (getJWT(localSDB.user) === null) {\n      console.log(\"no user\");\n    } else {\n      if (!getJWT(localSDB.projects)) {\n        getUserProjects();\n      } else {\n        setProjects(getJWT(localSDB.projects));\n      }\n    }\n  }, []);\n\n  const getTags = () => {\n    const tagArray = [].concat\n      .apply(\n        [],\n        projects.map((project) => project.tags)\n      )\n      .filter((val, id, array) => array.indexOf(val) === id);\n    return tagArray;\n  };\n\n  const getUserProjects = () => {\n    const user = getJWT(localSDB.user);\n    console.log(\"hola:\" + user);\n    if (user != null) {\n      axios\n        .get(routerMain.projectRouter.findProjectByUserId + user._id)\n        .then((res) => {\n          setProjects(res.data);\n          setJWT(localSDB.projects, res.data);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  //User Only for the Live version so the client doesn't use their localStorage\n  const fethProjectsData = (id) => {\n    axios\n      .get(routerMain.projectRouter.findProjectByUserId + id)\n      .then((res) => {\n        setProjects(res.data);\n        //setJWT(localStorageDB.projects, res.data);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getProjectByUserId = () => {\n    axios\n      .get(routerMain.projectRouter.findProject + projects._id)\n      .then((res) => {\n        setSingleProject(res.data);\n        console.log(\"Project found:\" + res.data);\n      });\n  };\n\n  const addProject = () => {\n    const objt = toAdd;\n    objt.userId = user._id;\n\n    axios\n      .post(routerMain.projectRouter.addProject, objt)\n      .then((res) => {\n        setJWT(localSDB.projects, [...projects, res.data]);\n        setProjects([...projects, res.data]);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const handleChange = (prop) => (event) => {\n    setToAdd({\n      ...toAdd,\n      [prop]: event.target.value,\n    });\n    console.log(toAdd);\n  };\n\n  const updateFoundProject = (card, index) => {\n    console.log(card);\n    if (toAdd.title !== \"\") {\n      card.title = toAdd.title;\n    }\n    if (toAdd.colaborators !== \"\") {\n      card.colaborators = toAdd.colaborators;\n    }\n    if (toAdd.description !== \"\") {\n      card.description = toAdd.description;\n    }\n    if (toAdd.urlimage !== \"\") {\n      card.urlimage = toAdd.urlimage;\n    }\n    if (toAdd.projecturl !== \"\") {\n      card.projecturl = toAdd.projecturl;\n    }\n    if (toAdd !== []) {\n      card.tags = toAdd.tags;\n    }\n\n    let newArr = [...projects];\n    newArr[index] = card;\n    newArr.userId = user._id;\n\n    setProjects(newArr);\n    setJWT(localSDB.projects, newArr);\n    const updateURL = routerMain.projectRouter.uptadeProject + card._id;\n\n    axios\n      .post(updateURL, card)\n      .then((res) => console.log(\"Updated Successfully\"))\n      .catch((err) => console.log(err));\n\n    setToAdd({\n      userId: \"\",\n      title: \"\",\n      description: \"\",\n      urlimage: \"\",\n      projecturl: \"\",\n      tags: [],\n      colaborators:[]\n    });\n  };\n\n  const saveProject = () => {\n    setProjects([...projects, toAdd]);\n    setJWT(localSDB.projects, [...projects, toAdd]);\n  };\n\n  const deleteProjectById = (id) => {\n    console.log(id);\n    let newArray = projects.filter((e) => e._id !== id);\n\n    setJWT(localSDB.projects, newArray);\n    setProjects(newArray);\n    axios\n      .delete(routerMain.projectRouter.deleteProject + id)\n      .then((resp) => resp.json())\n      .then((res) => {\n        console.log(\"Project successfully deleted\");\n        console.log(res);\n      })\n      .catch((err) => console.log(err));\n  };\n\n  const getProjectByTag = async (tag) => {\n    const tags = WordComb(tag);\n\n    await axios\n      .post(routerMain.projectRouter.getProjectsByTag, { tags })\n      .then((projectsByTag) => {\n        setJWT(localSDB.pTags, projectsByTag.data);\n        window.location = \"/index/tags\";\n      });\n  };\n\n  return (\n    <ProjectContext.Provider\n      value={{\n        getTags,\n        projects,\n        setProjects,\n        saveProject,\n        handleChange,\n        updateFoundProject,\n        addProject,\n        getUserProjects,\n        getProjectByUserId,\n        fethProjectsData,\n        deleteProjectById,\n        setToAdd,\n        toAdd,\n        getProjectByTag,\n      }}\n    >\n      {props.children}\n    </ProjectContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}