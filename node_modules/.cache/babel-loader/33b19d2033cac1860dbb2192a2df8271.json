{"ast":null,"code":"var _jsxFileName = \"/home/carlos/portafolio6_0/portafolio/src/common/QRProfile/QRProfile.js\";\nimport React, { useContext } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { Dialog, DialogContent, DialogActions, DialogTitle, Typography } from \"@material-ui/core\";\nimport { ButtonContained, ButtonOutlined } from \"common/buttons\";\nimport { OpenContext } from \"hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport { DownloadButton } from \"common/DownloadButton\";\nexport default function QRP({\n  url\n}) {\n  const {\n    open,\n    setOpen,\n    setClose\n  } = useContext(OpenContext);\n  const {\n    t\n  } = useTranslation();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonContained, {\n    title: t(\"profile.qrcode.button\"),\n    action: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    onClose: setClose,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClose: setClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, t(\"profile.qrcode.title\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(QRCode, {\n    value: url,\n    size: 200,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    action: setClose,\n    title: t(\"profile.qrcode.close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(DownloadButton, {\n    image: /*#__PURE__*/React.createElement(QRCode, {\n      value: url,\n      size: 200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/common/QRProfile/QRProfile.js"],"names":["React","useContext","QRCode","Dialog","DialogContent","DialogActions","DialogTitle","Typography","ButtonContained","ButtonOutlined","OpenContext","useTranslation","DownloadButton","QRP","url","open","setOpen","setClose","t"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SACEC,MADF,EAEEC,aAFF,EAGEC,aAHF,EAIEC,WAJF,EAKEC,UALF,QAMO,mBANP;AAQA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,gBAAhD;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,cAAT,QAA+B,uBAA/B;AAEA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAAsB;AACnC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA8BhB,UAAU,CAACS,WAAD,CAA9C;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAQP,cAAc,EAA5B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAEO,CAAC,CAAC,uBAAD,CAAzB;AAAoD,IAAA,MAAM,EAAEF,OAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEC,QADX;AAEE,uBAAgB,yBAFlB;AAGE,IAAA,IAAI,EAAEF,IAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAA0C,IAAA,OAAO,EAAEE,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,CAAC,CAAC,sBAAD,CADJ,CALF,eAQE,oBAAC,aAAD;AAAe,IAAA,QAAQ,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,GAAf;AAAoB,IAAA,IAAI,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CARF,eAaE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEG,QAAxB;AAAkC,IAAA,KAAK,EAAEC,CAAC,CAAC,sBAAD,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,cAAD;AAAgB,IAAA,KAAK,eAAE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEJ,GAAf;AAAoB,MAAA,IAAI,EAAE,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAbF,CAHF,CADF;AAwBD","sourcesContent":["import React, { useContext } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  DialogTitle,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { ButtonContained, ButtonOutlined } from \"common/buttons\";\nimport { OpenContext } from \"hooks\";\nimport { useTranslation } from \"react-i18next\";\nimport { DownloadButton } from \"common/DownloadButton\";\n\nexport default function QRP({ url }) {\n  const { open, setOpen, setClose } = useContext(OpenContext);\n  const { t } = useTranslation();\n  return (\n    <div>\n      <ButtonContained title={t(\"profile.qrcode.button\")} action={setOpen} />\n\n      <Dialog\n        onClose={setClose}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle id=\"customized-dialog-title\" onClose={setClose}>\n          {t(\"profile.qrcode.title\")}\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n            <QRCode value={url} size={200} />\n          </Typography>\n        </DialogContent>\n        <DialogActions>\n          <ButtonOutlined action={setClose} title={t(\"profile.qrcode.close\")} />\n          <DownloadButton image={<QRCode value={url} size={200} />} />\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}