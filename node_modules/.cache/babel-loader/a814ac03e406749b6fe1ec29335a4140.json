{"ast":null,"code":"var _jsxFileName = \"/home/carlos/portafolio6_0/portafolio/src/common/Cards/infoCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Grid, Card, CardActionArea, CardMedia, CardContent, Collapse, CardActions, Divider } from \"@material-ui/core\";\nimport { routerMain, window } from \"utils\";\nimport { ButtonOutlined, TypographyH6, TypographyBody, ViewTagsArray } from \"common\";\nimport CardHeaderInfo from \"./cardHeader\";\nimport useStyles from \"./themes\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonProject } from \"./Components\";\nimport { ButtonTextBlack } from \"common/buttons\";\n\nconst InfoCard = ({\n  card\n}) => {\n  const [checked, setChecked] = useState(false);\n  const [user, setUser] = useState({});\n  const {\n    toUserView\n  } = window();\n  const {\n    t\n  } = useTranslation();\n  const classes = useStyles();\n\n  const userView = () => {\n    toUserView(user.personalURL);\n  };\n\n  useEffect(() => {\n    axios.get(routerMain.userRouter.findUser + card.userId).then(user => setUser(user.data)).catch(err => console.log(err));\n  });\n\n  const handleChange = () => {\n    setChecked(prev => !prev);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeaderInfo, {\n    image: user.image,\n    title: user.username,\n    toClick: userView,\n    subheader: user.degree,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActionArea, {\n    onClick: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TypographyH6, {\n    text: card.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Collapse, {\n    in: checked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TypographyBody, {\n    text: card.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(ViewTagsArray, {\n    tags: card.tags,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonProject, {\n    url: card.projecturl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonTextBlack, {\n    title: t(\"infocard.button.description\"),\n    action: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default InfoCard;","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/common/Cards/infoCard.js"],"names":["React","useState","useEffect","axios","Grid","Card","CardActionArea","CardMedia","CardContent","Collapse","CardActions","Divider","routerMain","window","ButtonOutlined","TypographyH6","TypographyBody","ViewTagsArray","CardHeaderInfo","useStyles","useTranslation","ButtonProject","ButtonTextBlack","InfoCard","card","checked","setChecked","user","setUser","toUserView","t","classes","userView","personalURL","get","userRouter","findUser","userId","then","data","catch","err","console","log","handleChange","prev","image","username","degree","cardContent","title","description","tags","margin","projecturl"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  Grid,\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Collapse,\n  CardActions,\n  Divider,\n} from \"@material-ui/core\";\nimport { routerMain, window } from \"utils\";\nimport {\n  ButtonOutlined,\n  TypographyH6,\n  TypographyBody,\n  ViewTagsArray,\n} from \"common\";\n\nimport CardHeaderInfo from \"./cardHeader\";\nimport useStyles from \"./themes\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonProject } from \"./Components\";\nimport { ButtonTextBlack } from \"common/buttons\";\n\nconst InfoCard = ({ card }) => {\n  const [checked, setChecked] = useState(false);\n  const [user, setUser] = useState({});\n  const { toUserView } = window();\n\n  const { t } = useTranslation();\n\n  const classes = useStyles();\n  const userView = () => {\n    toUserView(user.personalURL);\n  };\n\n  useEffect(() => {\n    axios\n      .get(routerMain.userRouter.findUser + card.userId)\n      .then((user) => setUser(user.data))\n      .catch((err) => console.log(err));\n  });\n\n  const handleChange = () => {\n    setChecked((prev) => !prev);\n  };\n\n  return (\n    <Grid item>\n      <Card className={classes.card}>\n        <CardHeaderInfo\n          image={user.image}\n          title={user.username}\n          toClick={userView}\n          subheader={user.degree}\n        />\n        <CardActionArea onClick={handleChange}>\n          <CardContent className={classes.cardContent}>\n            <TypographyH6 text={card.title} />\n            <Collapse in={checked}>\n              <TypographyBody text={card.description} />\n            </Collapse>\n            <ViewTagsArray tags={card.tags} />\n          </CardContent>\n        </CardActionArea>\n        <Divider style={{ margin: \"10px\" }} />\n        <CardActions>\n          <ButtonProject url={card.projecturl} />\n          <ButtonTextBlack\n            title={t(\"infocard.button.description\")}\n            action={handleChange}\n          />\n        </CardActions>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default InfoCard;\n"]},"metadata":{},"sourceType":"module"}