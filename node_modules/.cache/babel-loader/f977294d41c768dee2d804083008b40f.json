{"ast":null,"code":"var _jsxFileName = \"/home/carlos/portafolio6_0/portafolio/src/hooks/useUser/useUser.js\";\nimport React, { useContext } from \"react\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { getJWT, localSDB, setJWT, routerMain } from \"utils\";\nimport axios from \"axios\";\nimport { OpenContext } from \"hooks\";\nexport const UserContext = createContext();\nexport function UserContextProvider(props) {\n  const [user, setUser] = useState({});\n  const [usertoFind, setUserToFind] = useState({});\n  const {\n    setOpen\n  } = useContext(OpenContext);\n  const [openRegister, setOpenRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (getJWT(localSDB.user) === null) {\n      console.log(\"user not set yet\");\n    } else {\n      setUser(getJWT(localSDB.user));\n    }\n  }, []);\n\n  const handleChange = prop => event => {\n    setUser({ ...user,\n      [prop]: event.target.value\n    });\n  };\n\n  const updateUserById = () => {\n    setJWT(localSDB.user, user);\n    setUser(user);\n    axios.post(routerMain.userRouter.updateUser + user._id, user).then(res => {\n      console.log(\"updated complete\");\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const updatePersonalURL = () => {\n    setJWT(localSDB.user, user);\n    setUser(user);\n    const toSend = {\n      personalURL: user.personalURL\n    };\n    axios.post(routerMain.userRouter.updateURL + user._id, toSend).then(res => {\n      if (res.data.body === \"Error\") {\n        setError(\"Error\");\n        console.log(res.data.body);\n      } else {\n        setError(\"\");\n        console.log(\"updated complete\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  async function register(userProps) {\n    axios.post(routerMain.userRouter.signup, userProps).then(res => {\n      setJWT(localSDB.user, res.data.body);\n      setJWT(localSDB.token, res.data.header);\n      setUser(res.body);\n      window.location = \"/app\";\n    }).catch(e => {\n      console.log(e);\n      setOpen();\n    });\n  } //login\n\n\n  async function login(user) {\n    axios.post(routerMain.userRouter.login, user).then(res => {\n      setJWT(localSDB.user, res.data.body);\n      setJWT(localSDB.token, res.data.header);\n      setUser(res.body);\n      window.location = \"/app\";\n    }).catch(err => {\n      console.log(err);\n      setOpen();\n    });\n  }\n\n  const getUserById = async id => {\n    await axios.get(routerMain.userRouter.findUser + id).then(user => setUserToFind(user.data)).catch(err => console.log(err));\n  };\n\n  const getUserByURL = async url => {\n    await fetch(routerMain.userRouter.findByURL + url).then(res => res.json()).then(user => setUserToFind(user.data)).catch(err => console.log(err));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(localSDB.google);\n    localStorage.removeItem(localSDB.user);\n    localStorage.removeItem(localSDB.token);\n    localStorage.removeItem(localSDB.projects);\n    window.location = \"/\";\n  };\n\n  const googleLogin = (response, id) => {\n    setJWT(\"google\", response);\n    const googleProfile = response.profileObj;\n    const user = {\n      username: googleProfile.name,\n      email: googleProfile.email,\n      image: googleProfile.imageUrl,\n      password: googleProfile.googleId,\n      personalURL: googleProfile.googleId\n    };\n    axios.post(routerMain.userRouter.googleLogin, user).then(resp => {\n      setJWT(localSDB.user, resp.data.body);\n      setJWT(localSDB.token, resp.data.body);\n      window.location = \"/app\";\n    }).catch(err => {\n      console.log(\"fasdfadsgafdga\");\n      console.log(err);\n\n      if (id === 1) {\n        setOpen();\n      } else {\n        setOpenRegister(openRegister => !openRegister);\n      }\n    });\n  };\n\n  const updateUserLeagues = () => {\n    setJWT(localSDB.user, user);\n    setUser(user);\n    const toSend = {\n      leagues: user.leagues\n    };\n    axios.post(routerMain.userRouter.updateLeagues + user._id, toSend).then(res => {\n      if (res.data.body === \"Error\") {\n        setError(\"Error\");\n        console.log(res.data.body);\n      } else {\n        setError(\"\");\n        console.log(\"updated complete\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      user,\n      googleLogin,\n      getUserByURL,\n      usertoFind,\n      login,\n      register,\n      getUserById,\n      handleChange,\n      updateUserById,\n      logout,\n      setOpen,\n      setOpenRegister,\n      openRegister,\n      error,\n      setError,\n      updatePersonalURL,\n      updateUserLeagues\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 5\n    }\n  }, props.children);\n}\nexport default UserContextProvider;","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/hooks/useUser/useUser.js"],"names":["React","useContext","useState","useEffect","createContext","getJWT","localSDB","setJWT","routerMain","axios","OpenContext","UserContext","UserContextProvider","props","user","setUser","usertoFind","setUserToFind","setOpen","openRegister","setOpenRegister","error","setError","console","log","handleChange","prop","event","target","value","updateUserById","post","userRouter","updateUser","_id","then","res","catch","err","updatePersonalURL","toSend","personalURL","updateURL","data","body","register","userProps","signup","token","header","window","location","e","login","getUserById","id","get","findUser","getUserByURL","url","fetch","findByURL","json","logout","localStorage","removeItem","google","projects","googleLogin","response","googleProfile","profileObj","username","name","email","image","imageUrl","password","googleId","resp","updateUserLeagues","leagues","updateLeagues","children"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport { useState, useEffect, createContext } from \"react\";\nimport { getJWT, localSDB, setJWT, routerMain } from \"utils\";\nimport axios from \"axios\";\nimport { OpenContext } from \"hooks\";\n\nexport const UserContext = createContext();\n\nexport function UserContextProvider(props) {\n  const [user, setUser] = useState({});\n  const [usertoFind, setUserToFind] = useState({});\n  const { setOpen } = useContext(OpenContext);\n  const [openRegister, setOpenRegister] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (getJWT(localSDB.user) === null) {\n      console.log(\"user not set yet\");\n    } else {\n      setUser(getJWT(localSDB.user));\n    }\n  }, []);\n\n  const handleChange = (prop) => (event) => {\n    setUser({\n      ...user,\n      [prop]: event.target.value,\n    });\n  };\n\n  const updateUserById = () => {\n    setJWT(localSDB.user, user);\n    setUser(user);\n    axios\n      .post(routerMain.userRouter.updateUser + user._id, user)\n      .then((res) => {\n        console.log(\"updated complete\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const updatePersonalURL = () => {\n    setJWT(localSDB.user, user);\n    setUser(user);\n    const toSend = {\n      personalURL: user.personalURL,\n    };\n    axios\n      .post(routerMain.userRouter.updateURL + user._id, toSend)\n      .then((res) => {\n        if (res.data.body === \"Error\") {\n          setError(\"Error\");\n          console.log(res.data.body);\n        } else {\n          setError(\"\");\n          console.log(\"updated complete\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  async function register(userProps) {\n    axios\n      .post(routerMain.userRouter.signup, userProps)\n      .then((res) => {\n        setJWT(localSDB.user, res.data.body);\n        setJWT(localSDB.token, res.data.header);\n        setUser(res.body);\n        window.location = \"/app\";\n      })\n      .catch((e) => {\n        console.log(e);\n        setOpen();\n      });\n  }\n\n  //login\n  async function login(user) {\n    axios\n      .post(routerMain.userRouter.login, user)\n      .then((res) => {\n        setJWT(localSDB.user, res.data.body);\n        setJWT(localSDB.token, res.data.header);\n        setUser(res.body);\n        window.location = \"/app\";\n      })\n      .catch((err) => {\n        console.log(err);\n        setOpen();\n      });\n  }\n\n  const getUserById = async (id) => {\n    await axios\n      .get(routerMain.userRouter.findUser + id)\n      .then((user) => setUserToFind(user.data))\n      .catch((err) => console.log(err));\n  };\n\n  const getUserByURL = async (url) => {\n    await fetch(routerMain.userRouter.findByURL + url)\n      .then((res) => res.json())\n      .then((user) => setUserToFind(user.data))\n      .catch((err) => console.log(err));\n  };\n\n  const logout = () => {\n    localStorage.removeItem(localSDB.google);\n    localStorage.removeItem(localSDB.user);\n    localStorage.removeItem(localSDB.token);\n    localStorage.removeItem(localSDB.projects);\n\n    window.location = \"/\";\n  };\n\n  const googleLogin = (response, id) => {\n    setJWT(\"google\", response);\n    const googleProfile = response.profileObj;\n\n    const user = {\n      username: googleProfile.name,\n      email: googleProfile.email,\n      image: googleProfile.imageUrl,\n      password: googleProfile.googleId,\n      personalURL: googleProfile.googleId,\n    };\n\n    axios\n      .post(routerMain.userRouter.googleLogin, user)\n      .then((resp) => {\n        setJWT(localSDB.user, resp.data.body);\n        setJWT(localSDB.token, resp.data.body);\n        window.location = \"/app\";\n      })\n      .catch((err) => {\n        console.log(\"fasdfadsgafdga\");\n        console.log(err);\n        if (id === 1) {\n          setOpen();\n        } else {\n          setOpenRegister((openRegister) => !openRegister);\n        }\n      });\n  };\n\n  const updateUserLeagues = () =>{\n    setJWT(localSDB.user, user);\n    setUser(user);\n    const toSend = {\n      leagues: user.leagues,\n    };\n    axios\n      .post(routerMain.userRouter.updateLeagues + user._id, toSend)\n      .then((res) => {\n        if (res.data.body === \"Error\") {\n          setError(\"Error\");\n          console.log(res.data.body);\n        } else {\n          setError(\"\");\n          console.log(\"updated complete\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <UserContext.Provider\n      value={{\n        user,\n        googleLogin,\n        getUserByURL,\n        usertoFind,\n        login,\n        register,\n        getUserById,\n        handleChange,\n        updateUserById,\n        logout,\n        setOpen,\n        setOpenRegister,\n        openRegister,\n        error,\n        setError,\n        updatePersonalURL,\n        updateUserLeagues,\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContextProvider;\n"]},"metadata":{},"sourceType":"module"}