{"ast":null,"code":"var _jsxFileName = \"/home/carlos/portafolio6_0/portafolio/src/common/EditProject/EditProject.js\";\nimport React, { useContext } from \"react\";\nimport { TextField, DialogTitle, Dialog, DialogActions, DialogContent, DialogContentText } from \"@material-ui/core\";\nimport { ProjectContext } from \"hooks\";\nimport { ButtonContained, ButtonOutlined, TagsArray, ButtonTextBlack } from \"common\";\nimport { useTranslation } from \"react-i18next\";\nexport default function EditProject(props) {\n  const [open, setOpen] = React.useState(false);\n  const {\n    projects,\n    handleChange,\n    updateFoundProject\n  } = useContext(ProjectContext);\n  const {\n    t\n  } = useTranslation();\n  const card = props.value;\n  let index = projects.findIndex(project => project._id === card._id); //console.log(\"found id: \" + index);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const saveProject = () => {\n    updateFoundProject(card, index);\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ButtonTextBlack, {\n    title: t(\"dashboard.editProject.title\"),\n    action: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, t(\"dashboard.editProject.title\")), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, t(\"dashboard.editProject.contentText\")), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: card.title,\n    onChange: handleChange(\"title\"),\n    label: t(\"dashboard.editProject.projectTitle\"),\n    type: \"email\",\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: card.description,\n    onChange: handleChange(\"description\"),\n    id: \"name\",\n    label: t(\"dashboard.editProject.projectDescription\"),\n    type: \"email\",\n    multiline: true,\n    variant: \"outlined\",\n    rows: 2,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    margin: \"normal\",\n    placeholder: card.projecturl,\n    onChange: handleChange(\"projecturl\"),\n    id: \"name\",\n    label: t(\"dashboard.editProject.projectLink\"),\n    type: \"email\",\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TagsArray, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonOutlined, {\n    action: handleClose,\n    title: t(\"dashboard.editProject.close\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ButtonContained, {\n    action: saveProject,\n    title: t(\"dashboard.editProject.save\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/common/EditProject/EditProject.js"],"names":["React","useContext","TextField","DialogTitle","Dialog","DialogActions","DialogContent","DialogContentText","ProjectContext","ButtonContained","ButtonOutlined","TagsArray","ButtonTextBlack","useTranslation","EditProject","props","open","setOpen","useState","projects","handleChange","updateFoundProject","t","card","value","index","findIndex","project","_id","handleClickOpen","handleClose","saveProject","title","description","projecturl"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport {\n  TextField,\n  DialogTitle,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n} from \"@material-ui/core\";\n\nimport { ProjectContext } from \"hooks\";\n\nimport {\n  ButtonContained,\n  ButtonOutlined,\n  TagsArray,\n  ButtonTextBlack,\n} from \"common\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function EditProject(props) {\n  const [open, setOpen] = React.useState(false);\n  const { projects, handleChange, updateFoundProject } = useContext(\n    ProjectContext\n  );\n  const { t } = useTranslation();\n  const card = props.value;\n  let index = projects.findIndex((project) => project._id === card._id);\n  //console.log(\"found id: \" + index);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const saveProject = () => {\n    updateFoundProject(card, index);\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <ButtonTextBlack\n        title={t(\"dashboard.editProject.title\")}\n        action={handleClickOpen}\n      />\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {t(\"dashboard.editProject.title\")}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            {t(\"dashboard.editProject.contentText\")}\n          </DialogContentText>\n          <TextField\n            margin=\"normal\"\n            placeholder={card.title}\n            onChange={handleChange(\"title\")}\n            label={t(\"dashboard.editProject.projectTitle\")}\n            type=\"email\"\n            fullWidth\n            variant=\"outlined\"\n          />\n          <TextField\n            margin=\"normal\"\n            placeholder={card.description}\n            onChange={handleChange(\"description\")}\n            id=\"name\"\n            label={t(\"dashboard.editProject.projectDescription\")}\n            type=\"email\"\n            multiline\n            variant=\"outlined\"\n            rows={2}\n            fullWidth\n          />\n          {/* <TextField\n            margin=\"normal\"\n            placeholder={card.urlimage}\n            onChange={handleChange(\"urlimage\")}\n            id=\"name\"\n            label={t(\"dashboard.editProject.projectImage\")}\n            type=\"email\"\n            variant=\"outlined\"\n            fullWidth\n         />*/}\n          <TextField\n            margin=\"normal\"\n            placeholder={card.projecturl}\n            onChange={handleChange(\"projecturl\")}\n            id=\"name\"\n            label={t(\"dashboard.editProject.projectLink\")}\n            type=\"email\"\n            variant=\"outlined\"\n            fullWidth\n          />\n          <TagsArray />\n        </DialogContent>\n        <DialogActions>\n          <ButtonOutlined\n            action={handleClose}\n            title={t(\"dashboard.editProject.close\")}\n          />\n          <ButtonContained\n            action={saveProject}\n            title={t(\"dashboard.editProject.save\")}\n          />\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}