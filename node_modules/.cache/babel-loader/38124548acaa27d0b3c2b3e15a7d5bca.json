{"ast":null,"code":"import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nconst fallbackLng = \"es\";\nconst availableLanguages = [\"es\", \"en\"];\ni18n.use(Backend) // load translation using xhr -> see /public/locales. We will add locales in the next step\n.use(LanguageDetector) // detect user language\n.use(initReactI18next) // pass the i18n instance to react-i18next.\n.init({\n  fallbackLng,\n  // if user computer language is not on the list of available languages, than we will be using the fallback language specified earlier\n  debug: false,\n  whitelist: availableLanguages,\n  load: \"languageOnly\",\n  lng: navigator.language || navigator.userLanguage,\n  interpolation: {\n    escapeValue: false\n  }\n});\nexport default i18n;","map":{"version":3,"sources":["/home/carlos/portafolio6_0/portafolio/src/utils/Lang/i18n.js"],"names":["i18n","Backend","LanguageDetector","initReactI18next","fallbackLng","availableLanguages","use","init","debug","whitelist","load","lng","navigator","language","userLanguage","interpolation","escapeValue"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,gBAAT,QAAiC,eAAjC;AAEA,MAAMC,WAAW,GAAG,IAApB;AACA,MAAMC,kBAAkB,GAAG,CAAC,IAAD,EAAO,IAAP,CAA3B;AAEAL,IAAI,CACDM,GADH,CACOL,OADP,EACgB;AADhB,CAGGK,GAHH,CAGOJ,gBAHP,EAGyB;AAHzB,CAKGI,GALH,CAKOH,gBALP,EAKyB;AALzB,CAOGI,IAPH,CAOQ;AACJH,EAAAA,WADI;AACS;AACbI,EAAAA,KAAK,EAAE,KAFH;AAGJC,EAAAA,SAAS,EAAEJ,kBAHP;AAIJK,EAAAA,IAAI,EAAE,cAJF;AAKJC,EAAAA,GAAG,EAAEC,SAAS,CAACC,QAAV,IAAsBD,SAAS,CAACE,YALjC;AAOJC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AAPX,CAPR;AAmBA,eAAehB,IAAf","sourcesContent":["import i18n from \"i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\n\nconst fallbackLng = \"es\";\nconst availableLanguages = [\"es\", \"en\"];\n\ni18n\n  .use(Backend) // load translation using xhr -> see /public/locales. We will add locales in the next step\n\n  .use(LanguageDetector) // detect user language\n\n  .use(initReactI18next) // pass the i18n instance to react-i18next.\n\n  .init({\n    fallbackLng, // if user computer language is not on the list of available languages, than we will be using the fallback language specified earlier\n    debug: false,\n    whitelist: availableLanguages,\n    load: \"languageOnly\",\n    lng: navigator.language || navigator.userLanguage,\n\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;\n"]},"metadata":{},"sourceType":"module"}